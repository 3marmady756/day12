using System;
using System.Collections.Generic;

class Question
{
    public string QuestionBody { get; set; }
    public int Mark { get; set; }

    public Question(string questionBody, int mark)
    {
        QuestionBody = questionBody;
        Mark = mark;
    }

    public override string ToString()
    {
        return $"{QuestionBody} ({Mark} marks)";
    }
}

class Answer
{
    public int Num { get; set; }
    public string ChoiceText { get; set; }

    public Answer(int num, string choiceText)
    {
        Num = num;
        ChoiceText = choiceText;
    }

    public override string ToString()
    {
        return $"{Num}. {ChoiceText}";
    }
}

class Program
{
    static void Main(string[] args)
    {
        List<Question> questions = new List<Question>
        {
            new Question("What does OOP stand for?", 10),
            new Question("What is polymorphism?", 15)
        };

        Console.WriteLine("Questions:");
        foreach (var question in questions)
        {
            Console.WriteLine(question);
        }

        Dictionary<Question, List<Answer>> exam = new Dictionary<Question, List<Answer>>();

        var answers1 = new List<Answer>
        {
            new Answer(1, "Object-Oriented Programming"),
            new Answer(2, "Open-Ocean Protocol"),
            new Answer(3, "None of the above")
        };

        var answers2 = new List<Answer>
        {
            new Answer(1, "Ability to process objects differently based on their data type"),
            new Answer(2, "A feature in procedural programming"),
            new Answer(3, "None of the above")
        };

        exam.Add(questions[0], answers1);
        exam.Add(questions[1], answers2);

        Console.WriteLine("\nExam:");
        foreach (var entry in exam)
        {
            Console.WriteLine(entry.Key);
            foreach (var answer in entry.Value)
            {
                Console.WriteLine($"   {answer}");
            }
        }
    }
}
